name: Validate images

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:

# env:

jobs:
  validate_images:
    name: Validate images
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.9.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Build Meta Image
        shell: bash
        env:
          VCN_ORG: ${{ secrets.VCN_ORG }}
        run: |
          bash <(curl https://getvcn.codenotary.com -L)

          export DOCKER_CLI_EXPERIMENTAL=enabled

          function validate_image() {
                  local image=${1}
                  local trust=0x0893a6151eccc2be56274ea043f47cb412b2a7be
                  local vcn_cli=()

                  if [[ "${trust}" =~ ^0x ]]; then
                    vcn_cli+=("--signerID" "${trust}")
                  else
                    vcn_cli+=("--org" "${trust}")
                  fi

                  echo "${vcn_cli[@]}"
                  echo "vcn authenticate "${vcn_cli[@]}" --output json docker://${image}"
                  
                  # state="$(vcn authenticate "${vcn_cli[@]}" --output json docker://"${image}" | jq '.verification.status // 2')"
                  # state="$(vcn authenticate --signerID "$VCN_ORG" --output json docker://"${image}" | jq '.verification.status // 2')"
                  # state="$(vcn authenticate --signerID 0x0893a6151eccc2be56274ea043f47cb412b2a7be --output json docker://"${image}" | jq '.verification.status // 2')"
                  state="$(vcn authenticate --output json docker://"${image}" | jq '.verification.status // 2')"

                  if [[ "${state}" != "0" ]]; then
                          echo "Invalid signature!"
                          exit 1
                  fi
          }

          for docker_reg in "drypatrick" "ghcr.io/drypatrick"; do
          docker pull "${docker_reg}/amd64-homeassistant:2021.6.10"
          validate_image "${docker_reg}/amd64-homeassistant:2021.6.10"
          done
