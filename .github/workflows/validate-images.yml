name: Validate images

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  # release:
  #   types: ["published"]

# env:
#   BUILD_TYPE: core
#   DEFAULT_PYTHON: 3.8

jobs:
  # init:
  #   name: Initialize build
  #   runs-on: ubuntu-latest
  #   outputs:
  #     # architectures: ${{ steps.info.outputs.architectures }}
  #     architectures: "amd64"
  #     version: ${{ steps.version.outputs.version }}
  #     channel: ${{ steps.version.outputs.channel }}
  #     publish: ${{ steps.version.outputs.publish }}
  #   steps:
  #     - name: Checkout the repository
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Python ${{ env.DEFAULT_PYTHON }}
  #       uses: actions/setup-python@v2.2.2
  #       with:
  #         python-version: ${{ env.DEFAULT_PYTHON }}

  #     - name: Get information
  #       id: info
  #       uses: home-assistant/actions/helpers/info@master

  #     - name: Get version
  #       id: version
  #       uses: home-assistant/actions/helpers/version@master
  #       with:
  #         type: ${{ env.BUILD_TYPE }}

  #     - name: Verify version
  #       uses: home-assistant/actions/helpers/verify-version@master
  #       with:
  #         ignore-dev: true

  
  validate_images:
    name: Validate images
    # needs: ["init", "build_base"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2.3.4

      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.9.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USER }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Build Meta Image
        shell: bash
        env:
          VCN_ORG: ${{ secrets.VCN_ORG }}
        run: |
          bash <(curl https://getvcn.codenotary.com -L)

          export DOCKER_CLI_EXPERIMENTAL=enabled

          function validate_image() {
                  local image=${1}
                  
                  if [[ "$VCN_ORG" =~ ^0x ]]; then
                          vcn_cli="--signerID"
                  else
                          vcn_cli="--org" 
                  fi
                  
                  state="$(vcn authenticate "${vcn_cli}" "$VCN_ORG" --output json docker://"${image}" | jq '.verification.status // 2')"
                  
                  if [[ "${state}" != "0" ]]; then
                          echo "Invalid signature!"
                          exit 1
                  fi
          }

          for docker_reg in "drypatrick" "ghcr.io/drypatrick"; do
          docker pull "${docker_reg}/amd64-homeassistant:${{ needs.init.outputs.version }}"
          validate_image "${docker_reg}/amd64-homeassistant:${{ needs.init.outputs.version }}"
          done
